// Generated by view binder compiler. Do not edit!
package com.jonys.appdesigner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jonys.appdesigner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DefinedAttributesDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnAdd;

  @NonNull
  public final ImageButton btnDelete;

  @NonNull
  public final ListView listView;

  @NonNull
  public final TextView widgetName;

  private DefinedAttributesDialogBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnAdd, @NonNull ImageButton btnDelete, @NonNull ListView listView,
      @NonNull TextView widgetName) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnDelete = btnDelete;
    this.listView = listView;
    this.widgetName = widgetName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DefinedAttributesDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DefinedAttributesDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.defined_attributes_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DefinedAttributesDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add;
      ImageButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btn_delete;
      ImageButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.listView;
      ListView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.widget_name;
      TextView widgetName = ViewBindings.findChildViewById(rootView, id);
      if (widgetName == null) {
        break missingId;
      }

      return new DefinedAttributesDialogBinding((LinearLayout) rootView, btnAdd, btnDelete,
          listView, widgetName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
