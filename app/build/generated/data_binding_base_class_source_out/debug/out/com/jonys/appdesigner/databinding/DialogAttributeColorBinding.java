// Generated by view binder compiler. Do not edit!
package com.jonys.appdesigner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jonys.appdesigner.R;
import com.jonys.appdesigner.tools.ColorView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAttributeColorBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ColorView colorPreview;

  @NonNull
  public final SeekBar seekAlpha;

  @NonNull
  public final SeekBar seekBlue;

  @NonNull
  public final SeekBar seekGreen;

  @NonNull
  public final SeekBar seekRed;

  @NonNull
  public final TextView textColorPreview;

  private DialogAttributeColorBinding(@NonNull ScrollView rootView, @NonNull ColorView colorPreview,
      @NonNull SeekBar seekAlpha, @NonNull SeekBar seekBlue, @NonNull SeekBar seekGreen,
      @NonNull SeekBar seekRed, @NonNull TextView textColorPreview) {
    this.rootView = rootView;
    this.colorPreview = colorPreview;
    this.seekAlpha = seekAlpha;
    this.seekBlue = seekBlue;
    this.seekGreen = seekGreen;
    this.seekRed = seekRed;
    this.textColorPreview = textColorPreview;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAttributeColorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAttributeColorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_attribute_color, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAttributeColorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.color_preview;
      ColorView colorPreview = ViewBindings.findChildViewById(rootView, id);
      if (colorPreview == null) {
        break missingId;
      }

      id = R.id.seek_alpha;
      SeekBar seekAlpha = ViewBindings.findChildViewById(rootView, id);
      if (seekAlpha == null) {
        break missingId;
      }

      id = R.id.seek_blue;
      SeekBar seekBlue = ViewBindings.findChildViewById(rootView, id);
      if (seekBlue == null) {
        break missingId;
      }

      id = R.id.seek_green;
      SeekBar seekGreen = ViewBindings.findChildViewById(rootView, id);
      if (seekGreen == null) {
        break missingId;
      }

      id = R.id.seek_red;
      SeekBar seekRed = ViewBindings.findChildViewById(rootView, id);
      if (seekRed == null) {
        break missingId;
      }

      id = R.id.text_color_preview;
      TextView textColorPreview = ViewBindings.findChildViewById(rootView, id);
      if (textColorPreview == null) {
        break missingId;
      }

      return new DialogAttributeColorBinding((ScrollView) rootView, colorPreview, seekAlpha,
          seekBlue, seekGreen, seekRed, textColorPreview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
